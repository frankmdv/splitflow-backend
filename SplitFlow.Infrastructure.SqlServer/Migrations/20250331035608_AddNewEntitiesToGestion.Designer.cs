// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SplitFlow.Infrastructure.SqlServer.Data;

#nullable disable

namespace SplitFlow.Infrastructure.SqlServer.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250331035608_AddNewEntitiesToGestion")]
    partial class AddNewEntitiesToGestion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Cuenta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<long>("IdBanco")
                        .HasColumnType("bigint");

                    b.Property<long>("IdMoneda")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTipoCuenta")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdMoneda");

                    b.HasIndex("IdTipoCuenta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.MovimientoDebito", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdProducto")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTipoMovimiento")
                        .HasColumnType("bigint");

                    b.Property<string>("Monto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaldoPosterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaldoPrevio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdTipoMovimiento");

                    b.ToTable("MovimientosDebito");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Presupuesto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdCategoria")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("MontoAsignado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Producto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCorte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaLimitePago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdCuenta")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTipoProducto")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LimiteCredito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saldo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaldoDisponible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasaInteresanual")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCuenta");

                    b.HasIndex("IdTipoProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Estado")
                        .HasMaxLength(150)
                        .HasColumnType("bit");

                    b.Property<long>("IdParGeneral")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdParGeneral");

                    b.ToTable("ParEspecifico");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Parametrizacion.ParametroGeneral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Estado")
                        .HasMaxLength(150)
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ParGeneral");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.Modulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.RolModulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ModuloId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolModulo");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Cuenta", b =>
                {
                    b.HasOne("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", "Banco")
                        .WithMany("ListaBancoCuenta")
                        .HasForeignKey("IdBanco")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", "Moneda")
                        .WithMany("ListaMonedaCuenta")
                        .HasForeignKey("IdMoneda")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", "TipoCuenta")
                        .WithMany("ListaTipoCuentaCuenta")
                        .HasForeignKey("IdTipoCuenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SplitFlow.Domain.Entities.Perfilamiento.User", "Usuario")
                        .WithMany("ListaUsuarioCuenta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Moneda");

                    b.Navigation("TipoCuenta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.MovimientoDebito", b =>
                {
                    b.HasOne("SplitFlow.Domain.Entities.Gestion.Producto", "Producto")
                        .WithMany("ListaMovimientoDebito")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", "TipoMovimiento")
                        .WithMany("ListaTipoMovimientoDebito")
                        .HasForeignKey("IdTipoMovimiento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Presupuesto", b =>
                {
                    b.HasOne("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", "Categoria")
                        .WithMany("ListaCategoriasPresupuestos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SplitFlow.Domain.Entities.Perfilamiento.User", "Usuario")
                        .WithMany("ListaPresupuestosUsuarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Producto", b =>
                {
                    b.HasOne("SplitFlow.Domain.Entities.Gestion.Cuenta", "Cuenta")
                        .WithMany("ListaProducto")
                        .HasForeignKey("IdCuenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", "TipoProducto")
                        .WithMany("ListaTipoProducto")
                        .HasForeignKey("IdTipoProducto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", b =>
                {
                    b.HasOne("SplitFlow.Domain.Entities.Parametrizacion.ParametroGeneral", "ParametroGeneral")
                        .WithMany("ParametroEspecificos")
                        .HasForeignKey("IdParGeneral")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ParametroGeneral");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.RolModulo", b =>
                {
                    b.HasOne("SplitFlow.Domain.Entities.Perfilamiento.Modulo", "Modulo")
                        .WithMany("RolesModulos")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SplitFlow.Domain.Entities.Perfilamiento.Role", "Role")
                        .WithMany("RolesModulos")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Modulo");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.User", b =>
                {
                    b.HasOne("SplitFlow.Domain.Entities.Perfilamiento.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Cuenta", b =>
                {
                    b.Navigation("ListaProducto");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Gestion.Producto", b =>
                {
                    b.Navigation("ListaMovimientoDebito");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Parametrizacion.ParametroEspecifico", b =>
                {
                    b.Navigation("ListaBancoCuenta");

                    b.Navigation("ListaCategoriasPresupuestos");

                    b.Navigation("ListaMonedaCuenta");

                    b.Navigation("ListaTipoCuentaCuenta");

                    b.Navigation("ListaTipoMovimientoDebito");

                    b.Navigation("ListaTipoProducto");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Parametrizacion.ParametroGeneral", b =>
                {
                    b.Navigation("ParametroEspecificos");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.Modulo", b =>
                {
                    b.Navigation("RolesModulos");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.Role", b =>
                {
                    b.Navigation("RolesModulos");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SplitFlow.Domain.Entities.Perfilamiento.User", b =>
                {
                    b.Navigation("ListaPresupuestosUsuarios");

                    b.Navigation("ListaUsuarioCuenta");
                });
#pragma warning restore 612, 618
        }
    }
}
